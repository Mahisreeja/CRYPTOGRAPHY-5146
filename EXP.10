def prepare_playfair_matrix():
    # Define the Playfair matrix
    playfair_matrix = [
        ['M', 'F', 'H', 'I', 'K'],
        ['U', 'N', 'O', 'P', 'Q'],
        ['Z', 'V', 'W', 'X', 'Y'],
        ['E', 'L', 'A', 'R', 'G'],
        ['D', 'S', 'T', 'B', 'C']
    ]
    return playfair_matrix

def find_position(playfair_matrix, letter):
    # Find the position (row, col) of a letter in the Playfair matrix
    for r in range(5):
        for c in range(5):
            if playfair_matrix[r][c] == letter:
                return (r, c)
    return None

def encrypt_playfair(plaintext, playfair_matrix):
    # Remove spaces and punctuation, convert to uppercase
    plaintext = plaintext.upper()
    plaintext = plaintext.replace('J', 'I')  # Replace 'J' with 'I'
    plaintext = ''.join(filter(str.isalpha, plaintext))  # Remove non-alphabetic characters
    
    # Split plaintext into digraphs
    digraphs = []
    i = 0
    while i < len(plaintext):
        if i == len(plaintext) - 1 or plaintext[i] == plaintext[i + 1]:
            digraphs.append(plaintext[i] + 'X')
            i += 1
        else:
            digraphs.append(plaintext[i] + plaintext[i + 1])
            i += 2
    
    # Encrypt each digraph
    ciphertext = []
    for digraph in digraphs:
        char1, char2 = digraph[0], digraph[1]
        r1, c1 = find_position(playfair_matrix, char1)
        r2, c2 = find_position(playfair_matrix, char2)
        
        if r1 == r2:
            # Same row
            encrypted_char1 = playfair_matrix[r1][(c1 + 1) % 5]
            encrypted_char2 = playfair_matrix[r2][(c2 + 1) % 5]
        elif c1 == c2:
            # Same column
            encrypted_char1 = playfair_matrix[(r1 + 1) % 5][c1]
            encrypted_char2 = playfair_matrix[(r2 + 1) % 5][c2]
        else:
            # Forming a rectangle
            encrypted_char1 = playfair_matrix[r1][c2]
            encrypted_char2 = playfair_matrix[r2][c1]
        
        ciphertext.append(encrypted_char1)
        ciphertext.append(encrypted_char2)
    
    return ''.join(ciphertext)

def main():
    # Prepare the Playfair matrix
    playfair_matrix = prepare_playfair_matrix()
    
    # Plaintext to be encrypted
    plaintext = "Must see you over Cadogan West. Coming at once."
    
    # Encrypt the plaintext
    encrypted_message = encrypt_playfair(plaintext, playfair_matrix)
    
    # Print the encrypted message
    print("Encrypted message:")
    print(encrypted_message)

if __name__ == "__main__":
    main()

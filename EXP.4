def generate_vigenere_table():
    table = []
    for i in range(26):
        row = [chr((i + j) % 26 + ord('A')) for j in range(26)]
        table.append(row)
    return table

def vigenere_cipher(text, key, encrypt=True):
    table = generate_vigenere_table()
    text = text.upper().replace(' ', '')
    key = key.upper().replace(' ', '')
    key_length = len(key)
    result = []
    
    for i, char in enumerate(text):
        if char.isalpha():
            row = ord(char) - ord('A')
            col = ord(key[i % key_length]) - ord('A')
            if encrypt:
                result.append(table[row][col])
            else:
                result.append(chr(table[row].index(char) + ord('A')))
        else:
            result.append(char)
    
    return ''.join(result)

def main():
    key = input("Enter the key for the Vigen√®re cipher: ").strip()
    while True:
        choice = input("Do you want to (e)ncrypt or (d)ecrypt? (Type 'exit' to quit): ").strip().lower()
        if choice == 'exit':
            break
        if choice not in ('e', 'd'):
            print("Invalid choice, please choose 'e' to encrypt or 'd' to decrypt.")
            continue

        text = input("Enter the text: ").strip()
        encrypt = choice == 'e'
        result = vigenere_cipher(text, key, encrypt)
        print(f"The resulting text is: {result}")

if __name__ == "__main__":
    main()
